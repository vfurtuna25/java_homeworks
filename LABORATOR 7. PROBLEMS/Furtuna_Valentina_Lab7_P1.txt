/*Furtuna Valentina. P1
 * 
 * 1. Creați o interfață denumită Generator<T> cu singura 
 * metodă next(T var). Implementați interfața pentru a permite 
generarea valorilor următoare în cazul aplicării asupra
 unor variabile de tipuri de date concrete (Integer, Character, etc.). 
Instanțierea clasei se va face în cadrul metodei main( ), 
care va fi poziționată într-o clasă distinctă. */

import java.util.Scanner;

interface Generator<T>{
	T next(T var);
}

class GenericInterface <T extends Number> implements Generator<T>{
	
	public T next(T var) {
		if (var instanceof Integer) {
			return (T) (Integer) (var.intValue()+1);
		}  else if (var instanceof Double) {
			return (T) (Double) (var.doubleValue()+1);
		} else if (var instanceof Float) {
			return (T) (Float) (var.floatValue()+1);
		}
		else return null;
	}
	
	public char[] next(String c) {
		return null;
	}
}


//public 
class problema1 {

	public static void main (String[] args) {
		
    Scanner in = new Scanner(System.in);
		
	GenericInterface<Integer> ob1 = new GenericInterface<Integer>();
	GenericInterface<Double> ob2 = new GenericInterface<Double>();
	GenericInterface<Float> ob3 = new GenericInterface<Float>();
	
	System.out.println("Scrieti un numar intreg");
	int x = in.nextInt();
	System.out.println("Scrieti un numar real");
	double y = in.nextDouble();
	System.out.println("Scrieti un numar flotant");
	float z = in.nextFloat();
	
	
	System.out.println("\n----------------------------------------------");
	System.out.println(ob1.next(x));
	System.out.println(ob2.next(y));
	System.out.println(ob3.next(z));
	
	in.close();
	}
	
	
}
